@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
}


.menu .tile-line.nav-l {
  transform: translate(0, -50%) scaleY(0);
  transform-origin: center top;
  background-color: var(--accent--tab);
}

.menu .tile-line.nav-r {
  transform: translate(0, -50%) scaleY(0);
  transform-origin: center bottom;
  background-color: var(--accent--tab);
}

.menu .tile-line.nav-t {
  transform: translate(50%, 0) scaleX(0);
  transform-origin: right center;
  background-color: var(--accent--tab);
}

.menu .tile-line.nav-b {
  transform: translate(50%, 0) scaleX(0);
  transform-origin: left center;
  background-color: var(--accent--tab);
}

.nav-tile.nav-tile-gridlines .tile-line {
  opacity: 0;
}

.nav-container.animating-in .nav-wrapper-gridlines {
  transition: opacity 1.5s ease-in-out 0.75s;
}

.nav-container:not(.final) .nav-wrapper-gridlines {
  opacity: 1;
}

.menu .tile-line.nav-l,
.menu .tile-line.nav-r {
  height: 100vh;
}

.menu .tile-line.nav-t,
.menu .tile-line.nav-b {
  width: 100vw;
}

/* Logo Draw In*/

.home-logo {
  width: 100%;
  height: 100%;
}

.home-logo path {
  vector-effect: non-scaling-stroke;
  stroke-dasharray: 1000 1000;
  stroke-dashoffset: 1000;
  fill: currentColor;
  fill-opacity: 0;
  stroke-width: 1px;
  stroke: var(--accent--tab);
  animation: drawIn 1.25s cubic-bezier(0.4, 0, 0.3, 1) forwards 0.5s;
}

@keyframes drawIn {
  to {
    stroke-dashoffset: 0;
  }
}

/* Logo Movement and Fill */

.nav-container.animating-in .home-logo-container {
  transition: width 1.5s cubic-bezier(0.5, 0, 0.05, 1) 1s,
    height 1.5s cubic-bezier(0.5, 0, 0.05, 1) 1s,
    left 1.25s cubic-bezier(0.5, 0, 0.3, 1) 1.25s,
    bottom 1.25s cubic-bezier(0.5, 0, 0.3, 1) 1.25s;
}

.nav-container.final .home-logo-container {
  width: 91px;
  height: 91px;
  left: 45px;
  bottom: 44.5px;
}

@media (max-width: 991px) {
  .nav-container.final .home-logo-container {
    width: 66px;
    height: 66px;
    left: 32px;
    bottom: 31.5px;
  }
}

.nav-container.animating-in .home-logo path {
  transition: fill-opacity 0.75s ease-in-out 1.25s,
    stroke-opacity 0.5s ease-in-out 1.5s;
}

.nav-container.final .home-logo path {
  fill-opacity: 1;
  stroke-opacity: 0;
}

.nav-container.animating-in .nav-button-title-container {
  transition: opacity 1.25s ease-in-out 1.25s;
}

.nav-container:not(.final) .nav-button-title-container {
  opacity: 0;
}

.nav-button-svg {
  display: none !important;
}

/* Lines */

.menu .tile-line.nav-l {
  transform: translate(0, -50%) scaleY(0);
  transform-origin: center top;
  background-color: var(--accent--tab);
}

.menu .tile-line.nav-r {
  transform: translate(0, -50%) scaleY(0);
  transform-origin: center bottom;
  background-color: var(--accent--tab);
}

.menu .tile-line.nav-t {
  transform: translate(50%, 0) scaleX(0);
  transform-origin: right center;
  background-color: var(--accent--tab);
}

.menu .tile-line.nav-b {
  transform: translate(50%, 0) scaleX(0);
  transform-origin: left center;
  background-color: var(--accent--tab);
}

.nav-tile.nav-tile-gridlines .tile-line {
  opacity: 0;
}

.nav-container.animating-in .nav-wrapper-gridlines {
  transition: opacity 1.5s ease-in-out 0.75s;
}

.nav-container:not(.final) .nav-wrapper-gridlines {
  opacity: 1;
}

.menu .tile-line.nav-l,
.menu .tile-line.nav-r {
  height: 100vh;
}

.menu .tile-line.nav-t,
.menu .tile-line.nav-b {
  width: 100vw;
}

/* Logo Draw In*/

.home-logo {
  width: 100%;
  height: 100%;
}

.home-logo path {
  vector-effect: non-scaling-stroke;
  stroke-dasharray: 1000 1000;
  stroke-dashoffset: 1000;
  fill: currentColor;
  fill-opacity: 0;
  stroke-width: 1px;
  stroke: var(--accent--tab);
  animation: drawIn 1.25s cubic-bezier(0.4, 0, 0.3, 1) forwards 0.5s;
}

@keyframes drawIn {
  to {
    stroke-dashoffset: 0;
  }
}

/* Logo Movement and Fill */

.nav-container.animating-in .home-logo-container {
  transition: width 1.5s cubic-bezier(0.5, 0, 0.05, 1) 1s,
    height 1.5s cubic-bezier(0.5, 0, 0.05, 1) 1s,
    left 1.25s cubic-bezier(0.5, 0, 0.3, 1) 1.25s,
    bottom 1.25s cubic-bezier(0.5, 0, 0.3, 1) 1.25s;
}

.nav-container.final .home-logo-container {
  width: 91px;
  height: 91px;
  left: 45px;
  bottom: 44.5px;
}

@media (max-width: 991px) {
  .nav-container.final .home-logo-container {
    width: 66px;
    height: 66px;
    left: 32px;
    bottom: 31.5px;
  }
}

.nav-container.animating-in .home-logo path {
  transition: fill-opacity 0.75s ease-in-out 1.25s,
    stroke-opacity 0.5s ease-in-out 1.5s;
}

.nav-container.final .home-logo path {
  fill-opacity: 1;
  stroke-opacity: 0;
}

.nav-container.animating-in .nav-button-title-container {
  transition: opacity 1.25s ease-in-out 1.25s;
}

.nav-container:not(.final) .nav-button-title-container {
  opacity: 0;
}

.nav-button-svg {
  display: none !important;
}


@media screen and ((max-height: 399px) or ((max-width: 991px) and (max-height: 480px)) or (max-width: 249px)) {

  .strategy-visual-container,
  .voice-tone-visual-container,
  .logo-visual-container,
  .typography-visual-container,
  .iconography-visual-container,
  .color-visual-container,
  .imagery-visual-container,
  .motion-visual-container {
    display: none;
  }
}

@media (any-hover: hover) {
  .tile:hover {
    background-color: var(--text--base) !important;
    color: white !important;
  }
}

/* Opening */

.opening .tile-title {
  opacity: 1 !important;
  transform: scale(4) !important;
}

@media screen and (max-width: 991px) {
  .opening .tile-title {
    transform: scale(2.5) !important;
  }
}


@media (max-width: 991px) {
  :root {
    --opening-margin: 60px;
    --opening-gutter: 12px;
    --body-margin-real: 60px;
    --body-gutter: 12px;
  }
}

@media (max-width: 767px) {
  :root {
    --opening-margin: 32px;
    --body-margin-real: 32px;
  }
}

.tile.strategy .bezier-point {
  fill: var(--color--identity--blue);
  stroke: var(--color--identity--blue);
  stroke-width: 2px;
  position: absolute;
  z-index: 2;
  transition: left var(--tile-transition),
    right var(--tile-transition),
    fill var(--tile-transition),
    stroke var(--tile-transition);
}

.tile.strategy .bezier-point.point-1 {
  left: 0;
  top: 0;
}

.tile.strategy .bezier-point.point-2 {
  right: 0;
  top: calc(50% - 10px);
}

.tile.strategy .bezier-point.point-3 {
  left: 0;
  bottom: 0;
}

@media (any-hover: hover) {
  .tile.strategy:hover .bezier-point {
    fill: var(--text--base);
    stroke: white;
  }
}


.strategy-bezier-path {
  width: 100%;
  height: 100%;
  fill: none;
  stroke-width: 2px;
}

.strategy-bezier-path path {
  vector-effect: non-scaling-stroke;
  stroke: var(--color--identity--blue);
  transition: opacity var(--tile-transition);
  pointer-events: none;
}

.tile.strategy:hover .strategy-bezier-path path {
  opacity: 0;
}

.strategy-sketch-path-1 {
  width: 100%;
  height: 100%;
  fill: none;
  stroke: white;
  stroke-width: clamp(1.5px,
      calc(4.5px - min(0.2vw, 0.2vh)),
      5px);
}

.strategy-sketch-path-1 path {
  /*vector-effect: non-scaling-stroke;*/
  stroke-dasharray: 433;
  stroke-dashoffset: 433;
  opacity: 0;
  transition: stroke-dashoffset 0.2s cubic-bezier(0.2, 0.1, 0, 1),
    opacity 0.4s;
}

@media (any-hover: hover) {
  .tile.strategy:hover .strategy-sketch-path-1 path {
    stroke-dashoffset: 0;
    opacity: 1;
    transition: stroke-dashoffset 0.75s cubic-bezier(0.5, 0, 0.3, 1),
      opacity 0.4s;
  }
}

.strategy-sketch-path-2 {
  width: 100%;
  height: 100%;
  fill: none;
  stroke: white;
  stroke-width: clamp(1.5px,
      calc(4.5px - min(0.2vw, 0.2vh)),
      5px);
}

.strategy-sketch-path-2 path {
  /*vector-effect: non-scaling-stroke;*/
  stroke-dasharray: 321;
  stroke-dashoffset: 321;
  opacity: 0;
  transition: stroke-dashoffset 0.3s cubic-bezier(0.2, 0.1, 0, 1),
    opacity 0.4s;
}

@media (any-hover: hover) {
  .tile.strategy:hover .strategy-sketch-path-2 path {
    stroke-dashoffset: 0;
    opacity: 1;
    transition: stroke-dashoffset 0.7s cubic-bezier(0.2, 0.1, 0, 1) 0.3s,
      opacity 0.4s;
  }
}

.voice-tone-quotation-mark {
  position: absolute;
  height: auto;
  width: calc(min(6vw, 8vh) + 32px);
  fill: var(--color--identity--on-yellow);
  stroke: transparent;
  stroke-width: 4px;
  transition: fill var(--tile-transition),
    stroke var(--tile-transition),
    transform var(--tile-transition);
}

.voice-tone-quotation-mark path {
  vector-effect: non-scaling-stroke;
}

.voice-tone-quotation-mark.left {
  left: 0;
  top: 0;
}

.voice-tone-quotation-mark.right {
  right: 0;
  bottom: 0;
  transform: rotateZ(180deg);
}

@media (any-hover: hover) {
  .tile.voice-tone:hover .voice-tone-quotation-mark {
    stroke: white;
    fill: var(--text--base);
  }

  .tile.voice-tone:hover .voice-tone-quotation-mark.left {
    transform: translateX(40%);
  }

  .tile.voice-tone:hover .voice-tone-quotation-mark.right {
    transform: rotateZ(180deg) translateX(40%);
  }
}




.logo-visual-lottie path {
  fill: var(--color--identity--on-cyan);
  transition: opacity var(--tile-transition);
}

.tile.logo:hover .logo-visual-lottie path {
  opacity: 0;
  /*	transform: scale(0.7);*/
  transition: opacity var(--tile-transition),
    transform var(--tile-transition);
}

.logo-visual-outline-lottie path {
  fill: var(--text--base);
  stroke-width: 5px;
  stroke: white;
  /*	transform: scale(0.7);*/
  opacity: 0;
  transition: opacity var(--tile-transition),
    transform var(--tile-transition) 0.8s;
}

.tile.logo:hover .logo-visual-outline-lottie path {
  transition: opacity var(--tile-transition) 0s,
    transform var(--tile-transition) 0.1s;
  opacity: 1;
  transform: initial;
}

.tile.typography .typography-visual-type {
  height: 500px;
  max-height: 100%;
  max-width: 100%;
  fill: var(--color--identity--on-red);
  stroke: transparent;
  stroke-width: 2px;
  transition: fill var(--tile-transition),
    stroke var(--tile-transition);
}

@media (any-hover: hover) {
  .tile.typography:hover .typography-visual-type {
    fill: transparent;
    stroke: white;
  }
}

.tile.typography .typography-visual-type path {
  vector-effect: non-scaling-stroke;
}

.iconography-visual-lock {
  height: 100%;
  fill: var(--color--identity--on-green);
  stroke: transparent;
  stroke-width: 2px;
  transition: fill var(--tile-transition),
    stroke var(--tile-transition);
}

@media (any-hover: hover) {
  .tile.iconography:hover .iconography-visual-lock {
    fill: transparent;
    stroke: white;
  }
}

.iconography-visual-lock path {
  vector-effect: non-scaling-stroke;
}

.tile.color .color-color-block {
  transition: background-color var(--tile-transition),
    border var(--tile-transition),
    transform var(--tile-transition);
  border: 2px solid transparent;
}

@media (any-hover: hover) {
  .tile.color:hover .color-color-block {
    background-color: transparent;
    border-color: white;
  }

  .tile.color:hover .color-color-block.block-1 {
    transform: translate(calc(100% - 1px), 1px);
  }

  .tile.color:hover .color-color-block.block-2 {
    transform: translate(calc(-100% + 1px), -1px);
  }
}

.tile.color .color-color-circle {
  position: absolute;
  width: 100%;
  height: 100%;
  stroke-width: 2px;
  stroke: transparent;
  transition: fill var(--tile-transition),
    stroke var(--tile-transition);
}

.tile.color .color-color-circle path {
  vector-effect: non-scaling-stroke;
}

.tile.color .color-color-block.block-1 .color-color-circle {
  fill: var(--color--identity--on-orange);
}

.tile.color .color-color-block.block-2 .color-color-circle {
  fill: var(--color--accent--rust);
}

@media (any-hover: hover) {
  .tile.color:hover .color-color-circle {
    fill: transparent !important;
    stroke: white;
  }
}

.tile.imagery .hills {
  position: absolute;
  width: calc(100% + 8px);
  height: calc(75% + 4px);
  left: -4px;
  bottom: -4px;
  fill: var(--color--accent--azalea);
  stroke: transparent;
  stroke-width: 2px;
  z-index: 2;
  transition: fill var(--tile-transition),
    stroke var(--tile-transition);
}

@media (any-hover: hover) {
  .tile.imagery:hover .hills {
    fill: var(--text--base);
    stroke: white;
  }
}

.tile.imagery .hills path,
.tile.imagery .sun circle,
.tile.imagery .moon path {
  vector-effect: non-scaling-stroke;
}

.tile.imagery .imagery-visual-picture-embed {
  background-color: var(--color--accent--pink);
  transition: background-color var(--tile-transition);
}

@media (any-hover: hover) {
  .tile.imagery:hover .imagery-visual-picture-embed {
    background-color: transparent;
  }
}

.tile.imagery .imagery-visual-picture-border {
  opacity: 0;
  transition: opacity var(--tile-transition);
}

@media (any-hover: hover) {
  .tile.imagery:hover .imagery-visual-picture-border {
    opacity: 1;
  }
}

.tile.imagery .sunandmoon {
  position: absolute;
  top: 25%;
  left: 17%;
  height: 70%;
  aspect-ratio: 1;
  transform: rotateZ(-25deg);
  transition: transform 0.7s cubic-bezier(0.4, 0.2, 0.2, 1);
}

.tile.imagery .sunmoon {
  position: absolute;
  height: 30%;
  aspect-ratio: 1;
  fill: var(--color--accent--azalea);
  stroke: transparent;
  stroke-width: 2px;
  transition: fill var(--tile-transition),
    stroke var(--tile-transition),
    transform 0.7s cubic-bezier(0.4, 0.2, 0.2, 1);
}

.tile.imagery .sun {
  top: 0;
  left: 35%;
}

.tile.imagery .moon {
  bottom: 0;
  left: 35%;
  transform: rotateZ(25deg);
}

@media (any-hover: hover) {
  .tile.imagery:hover .sunmoon {
    fill: transparent;
    stroke: white;
  }
}

.tile.motion .bezier-point {
  fill: var(--color--identity--on-purple);
  stroke: var(--color--identity--on-purple);
  stroke-width: 2px;
  position: absolute;
  transition: left var(--tile-transition),
    right var(--tile-transition),
    fill var(--tile-transition),
    stroke var(--tile-transition);
  z-index: 3;
}

.tile.motion .bezier-point.point-1 {
  left: 0;
  bottom: 0;
}

.tile.motion .bezier-point.point-2 {
  left: 25%;
  bottom: 0;
}

.tile.motion .bezier-point.point-3 {
  right: 30%;
  top: 0;
}

.tile.motion .bezier-point.point-4 {
  right: 0;
  top: 0;
}

@media (any-hover: hover) {
  .tile.motion:hover .bezier-point.point-2 {
    left: 50%;
  }

  .tile.motion:hover .bezier-point.point-3 {
    right: 50%;
  }

  .tile.motion:hover .bezier-point {
    fill: var(--text--base);
    stroke: white;
  }
}

.tile.motion .bezier-tangent {
  position: absolute;
  height: 2px;
  background-color: var(--color--identity--on-purple);
  transition: width var(--tile-transition), background-color var(--tile-transition);
  z-index: 2;
}

.tile.motion .bezier-tangent.tangent-1 {
  bottom: 9px;
  left: 10px;
  width: calc(25% - 0px);
}

.tile.motion .bezier-tangent.tangent-2 {
  top: 9px;
  right: 10px;
  width: calc(30% - 0px);
}

@media (any-hover: hover) {
  .tile.motion:hover .bezier-tangent.tangent-1 {
    width: calc(50% - 0px);
  }

  .tile.motion:hover .bezier-tangent.tangent-2 {
    width: calc(50% - 0px);
  }

  .tile.motion:hover .bezier-tangent {
    background-color: white;
  }
}

.motion-bezier-path {
  width: 100%;
  height: 100%;
  fill: none;
  stroke-width: 2px;
}

.motion-bezier-path path {
  vector-effect: non-scaling-stroke;
  stroke: var(--color--identity--on-purple);
  transition: stroke var(--tile-transition);
}

@media (any-hover: hover) {
  .tile.motion:hover .motion-bezier-path path {
    stroke: white;
  }
}


.scroll-chevrons-container {
  opacity: 0;
  transition: opacity 1.5s;
}

.scroll-chevron {
  position: absolute;
  width: 52px;
  right: 14px;
  color: var(--color--accent--line-solid);
  transition: transform 1.6s cubic-bezier(0.2, 0, 0.3, 1),
    color 1.5s cubic-bezier(0.2, 0, 0.3, 1);
}

.scroll-chevrons-container.visible {
  opacity: 1;
}

.scroll-chevron.activated {
  transform: translateY(18px);
  color: var(--accent--tab);
  transition: transform 0.65s cubic-bezier(0.6, 0, 0.6, 1),
    color 0.65s cubic-bezier(0.6, 0, 0.6, 1);
}

.scroll-chevron.chevron-1 {
  bottom: 42px;
}

.scroll-chevron.chevron-2 {
  bottom: 30px;
}

@media (max-width: 991px) {
  .scroll-chevron {
    width: 24px;
    right: 16px;
  }

  .scroll-chevron.activated {
    transform: translateY(14px);
  }

  .scroll-chevron.chevron-1 {
    bottom: 31px;
  }

  .scroll-chevron.chevron-2 {
    bottom: 22px;
  }
}

@media (max-width: 991px) {
  .menu-arrow-icon {
    transform: rotate(-90deg);
  }
}


.partner-icon-container {
  position: relative;
  width: 16px;
  height: 16px;
}

.partner-info-icon,
.partner-close-icon {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  fill: currentColor;
  opacity: 0;
  transition: opacity 0.7s cubic-bezier(0.4, 0, 0.1, 1);
}

.partner-close-icon {
  transform: rotate(180deg);
}

.nav-container:not(.outro) .partner-info-icon {
  opacity: 1;
}

.nav-container.outro .partner-close-icon {
  opacity: 1;
}

@media (max-width: 991px) {
  .nav-container:not(.outro) .partner-info-icon {
    opacity: 1;
  }

  .nav-container.outro .partner-close-icon {
    opacity: 0;
  }

  .nav-container.outro .partner-info-icon {
    opacity: 1;
  }

  .nav-container:not(.outro) .partner-close-icon {
    opacity: 0;
  }
}

.nav-container.close .menu {
  z-index: 100;
  transform: translate(0, 50%) !important;
  /*transform: translate(-50%, -50%) translateX(calc(-50vw + var(--button-size) / 3))!important;*/
  transition: transform 0.5s var(--nav-easing-swoop) 0.05s !important;
}

@media (max-width: 991px) {
  .nav-container.close.menu {
    transform: translate(-50%, 0) !important;
    /*transform: translate(-50%, -50%) translateY(calc(50dvh - var(--button-size)* 0.75 / 2))!important;*/
  }
}

@keyframes scaleToClose {
  from {
    transform: scale(1);
  }

  to {
    transform: scale(0.666667);
  }
}

.nav-container.close .nav-button {
  transform: scale(calc(2 / 3));
  animation: scaleToClose 0.3s var(--nav-easing) forwards !important;
  transition: transform 0.3s var(--nav-easing) !important;
}

.nav-container.close .nav-tile {
  opacity: 0;
  transition: 0.2s ease;
}

.nav-container.close .nav-tile.enlarge a {
  padding-left: var(--opening-col-2-left);
}

.nav-container.close .nav-tile.enlarge .tile-title {
  color: #fff !important;
  top: 50%;
  transform: translateY(-50%) scale(4);
  transition: 0.6s var(--nav-easing);
  transition-property: top, transform;
}

@media (max-width: 991px) {
  .nav-container.close.nav-tile.enlarge a {
    padding-left: var(--opening-col-1-left);
  }

  .nav-container.close .nav-tile.enlarge .tile-title {
    transform: translateY(-50%) scale(2.5);
  }
}

.nav-tile.enlarge {
  opacity: 1 !important;
  transition: 0.6s cubic-bezier(0.65, 0, 0.15, 1) !important;
  z-index: 99;
  width: 100vw;
  height: 100vh;
}

.nav-tile-1.enlarge,
.nav-tile-2.enlarge,
.nav-tile-3.enlarge,
.nav-tile-4.enlarge {
  top: 0;
}

.nav-tile-1.enlarge,
.nav-tile-2.enlarge,
.nav-tile-5.enlarge,
.nav-tile-6.enlarge {
  left: 0;
}

.nav-tile-5.enlarge,
.nav-tile-6.enlarge,
.nav-tile-7.enlarge,
.nav-tile-8.enlarge {
  bottom: 0;
}

.nav-tile-3.enlarge,
.nav-tile-4.enlarge,
.nav-tile-7.enlarge,
.nav-tile-8.enlarge {
  right: 0;
}

@media (max-width: 991px) {

  .nav-tile-2.enlarge,
  .nav-tile-6.enlarge {
    left: initial;
    right: 0;
  }

  .nav-tile-3.enlarge,
  .nav-tile-7.enlarge {
    left: 0;
    right: initial;
  }
}

.nav-tile.enlarge a {
  background-color: var(--surface--background-dark) !important;
  border-radius: 0px;
}

.nav-tile a div:nth-child(2) {
  opacity: 1;
  transition: opacity 0.3s ease;
}

.nav-tile.enlarge a div:nth-child(2) {
  opacity: 0;
}

html,
body {
    overscroll-behavior: none;
}

.nav {
    width: 100vw;
    pointer-events: all;
}

::-webkit-scrollbar {
    display: none;
}

.nav-tile,
.menu {
    pointer-events: all !important;
}

.nav-border-line {
    display: none;
}

.nav-container .menu {
    left: calc(var(--button-size) / -6);
    bottom: 50%;
    transform: translate(calc(50vw - var(--button-size) / 3), 50%);
}

@media (max-width: 991px) {
    .nav-container .menu {
        left: 50%;
        bottom: calc(var(--button-size) / -8);
        transform: translate(-50%, calc(-50dvh - var(--button-size) * 3 / -8));
    }
}